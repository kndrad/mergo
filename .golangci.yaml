run:
  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  timeout: 1m
  # Include test files or not.
  # Default: true
  tests: true
  # If set, we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  #
  # Allowed values: readonly|vendor|mod
  # Default: ""
  modules-download-mode: readonly
  # Allow multiple parallel golangci-lint instances running.
  # If false, golangci-lint acquires file lock on start.
  # Default: false
  allow-parallel-runners: true
  # Allow multiple golangci-lint instances running, but serialize them around a lock.
  # If false, golangci-lint exits with an error if it fails to acquire file lock on start.
  # Default: false
  allow-serial-runners:
    true
    # Define the Go version limit.
  # Mainly related to generics support since go1.18.
  # Default: use Go version from the go.mod file, fallback on the env var `GOVERSION`, fallback on 1.17
  # go: "1.19"
output:
  # Sort results by the order defined in `sort-order`.
  # Default: false
  sort-results: true
  # Order to use when sorting results.
  # Require `sort-results` to `true`.
  # Possible values: `file`, `linter`, and `severity`.
  #
  # If the severity values are inside the following list, they are ordered in this order:
  #   1. error
  #   2. warning
  #   3. high
  #   4. medium
  #   5. low
  # Either they are sorted alphabetically.
  #
  # Default: ["file"]
  sort-order:
    - severity
  # Show statistics per linter.
  # Default: false
  show-stats: false
# All available settings of specific linters.
# linters-settings:
# See the dedicated "linters-settings" documentation section.
# option: value
linters:
  # Disable all linters.
  # Default: false
  # disable-all: false
  # Enable specific linter
  # https://golangci-lint.run/usage/linters/#enabled-by-default
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - canonicalheader
    - containedctx
    - contextcheck
    - copyloopvar
    - cyclop
    - decorder
    #- depguard
    - dogsled
    - dupl
    # - dupword
    - durationcheck
    # - err113
    #- errcheck
    - errchkjson
    - errname
    - errorlint
    # - execinquery
    - exhaustive
    #- exhaustruct
    # - exportloopref
    - fatcontext
    #- forbidigo
    - forcetypeassert
    - funlen
    # - gci
    - ginkgolinter
    - gocheckcompilerdirectives
    #- gochecknoglobals
    #- gochecknoinits
    - gochecksumtype
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - gosmopolitan
    - govet
    - grouper
    - importas
    - inamedparam
    - ineffassign
    - interfacebloat
    - intrange
    - ireturn
    - lll
    - loggercheck
    - maintidx
    - makezero
    - mirror
    - misspell
    #- mnd
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - nlreturn
    - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - paralleltest
    - perfsprint
    - prealloc
    - predeclared
    - promlinter
    - protogetter
    - reassign
    #- revive
    - rowserrcheck
    - sloglint
    - spancheck
    - sqlclosecheck
    - staticcheck
    - stylecheck
    - tagalign
    - tagliatelle
    - tenv
    - testableexamples
    - testifylint
    - testpackage
    - thelper
    - tparallel
    - typecheck
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    #- varnamelen
    - wastedassign
    - whitespace
    - wrapcheck
    #- wsl
    - zerologlint
  # Enable all available linters.
  # Default: false
  # enable-all: false
  # Disable specific linter
  # https://golangci-lint.run/usage/linters/#disabled-by-default
  disable:
  # - asasalint
  # - asciicheck
  # - bidichk
  # - bodyclose
  # - canonicalheader
  # - containedctx
  # - contextcheck
  # - copyloopvar
  # - cyclop
  # - decorder
    - depguard
  # - dogsled
  # - dupl
  # - dupword
  # - durationcheck
    - err113
    - errcheck
  # - errchkjson
  # - errname
  # - errorlint
  # - execinquery
  # - exhaustive
    - exhaustruct
  # - exportloopref
  # - fatcontext
    - forbidigo
  # - forcetypeassert
  # - funlen
    - gci
  # - ginkgolinter
  # - gocheckcompilerdirectives
    - gochecknoglobals
    - gochecknoinits
  # - gochecksumtype
  # - gocognit
  # - goconst
  # - gocritic
  # - gocyclo
  # - godot
  # - godox
  # - gofmt
  # - gofumpt
  # - goheader
  # - goimports
  # - gomoddirectives
  # - gomodguard
  # - goprintffuncname
  # - gosec
  # - gosimple
  # - gosmopolitan
  # - govet
  # - grouper
  # - importas
  # - inamedparam
  # - ineffassign
  # - interfacebloat
  # - intrange
  # - ireturn
  # - lll
  # - loggercheck
  # - maintidx
  # - makezero
  # - mirror
  # - misspell
    - mnd
  # - musttag
  # - nakedret
  # - nestif
  # - nilerr
  # - nilnil
  # - nlreturn
  # - noctx
  # - nolintlint
  # - nonamedreturns
  # - nosprintfhostport
  # - paralleltest
  # - perfsprint
  # - prealloc
  # - predeclared
  # - promlinter
  # - protogetter
  # - reassign
    - revive
  # - rowserrcheck
  # - sloglint
  # - spancheck
  # - sqlclosecheck
  # - staticcheck
  # - stylecheck
  # - tagalign
  # - tagliatelle
  # - tenv
  # - testableexamples
  # - testifylint
  # - testpackage
  # - thelper
  # - tparallel
  # - typecheck
  # - unconvert
  # - unparam
  # - unused
  # - usestdlibvars
    - varnamelen
  # - wastedassign
  # - whitespace
  # - wrapcheck
    - wsl
  # - zerologlint
  # - deadcode # Deprecated
  # - exhaustivestruct # Deprecated
  # - golint # Deprecated
  # - ifshort # Deprecated
  # - interfacer # Deprecated
  # - maligned # Deprecated
  # - gomnd # Deprecated
  # - nosnakecase # Deprecated
  # - scopelint # Deprecated
  # - structcheck # Deprecated
  # - varcheck # Deprecated
  # Enable presets.
  # https://golangci-lint.run/usage/linters
  # Default: []
  presets:
    - bugs
    - comment
    - complexity
    - error
    - format
    - import
    - metalinter
    - module
    - performance
    - sql
    - style
    - test
    - unused
  # Enable only fast linters from enabled linters set (first run won't be fast)
  # Default: false
  fast: false
issues:
  # Enables exclude of directories:
  # - vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  # Default: true
  exclude-dirs-use-default: true
  # Mode of the generated files analysis.
  #
  # - `strict`: sources are excluded by following strictly the Go generated file convention.
  #    Source files that have lines matching only the following regular expression will be excluded: `^// Code generated .* DO NOT EDIT\.$`
  #    This line must appear before the first non-comment, non-blank text in the file.
  #    https://go.dev/s/generatedcode
  # - `lax`: sources are excluded if they contain lines `autogenerated file`, `code generated`, `do not edit`, etc.
  # - `disable`: disable the generated files exclusion.
  #
  # Default: lax
  exclude-generated: lax
  # Fix found issues (if it's supported by the linter).
  # Default: false
  fix: false
severity:
  # Set the default severity for issues.
  #
  # If severity rules are defined and the issues do not match or no severity is provided to the rule
  # this will be the default severity applied.
  # Severities should match the supported severity names of the selected out format.
  # - Code climate: https://docs.codeclimate.com/docs/issues#issue-severity
  # - Checkstyle: https://checkstyle.sourceforge.io/property_types.html#SeverityLevel
  # - GitHub: https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-error-message
  # - TeamCity: https://www.jetbrains.com/help/teamcity/service-messages.html#Inspection+Instance
  #
  # `@linter` can be used as severity value to keep the severity from linters (e.g. revive, gosec, ...)
  #
  # Default: ""
  default-severity: ""
  # If set to true `severity-rules` regular expressions become case-sensitive.
  # Default: false
  case-sensitive: false
